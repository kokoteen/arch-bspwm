#!/usr/bin/bash

function bubble_sort()
{
    local array=("$@") max=$#
    for ((i=0; i<max; i++)); do
        for ((j=0; j<max-i-1; j++)); do
            if ((array[j]>array[j+1])); then
                t=${array[j]}
                array[j]=${array[j+1]}
                array[j+1]=$t

                t=${y_upp[j]}
                y_upp[j]=${y_upp[j+1]}
                y_upp[j+1]=$t
                
                t=${delta[j]}
                delta[j]=${delta[j+1]}
                delta[j+1]=$t
            fi
        done
    done
    bins=("${array[@]}")
}

status="show"
pid="$(pgrep -x polybar | tail -1)"

declare -a delta
declare -a bins 
declare -a y_upp

y_upp=($(xrandr -q | sed -nE 's/.* connected (primary )?(.*) \(.*/\2/p' | cut -d'+' -f1 | cut -d'x' -f2))

delta=($(xrandr -q | sed -nE 's/.* connected (primary )?(.*) \(.*/\2/p' | cut -d'x' -f1))

bins=($(xrandr -q | sed -nE 's/.* connected (primary )?(.*) \(.*/\2/p' | cut -d'+' -f2))
bubble_sort "${bins[@]}"
bins+=($(( "${bins[-1]}"+"${delta[-1]}" )))

while :
do
    eval "$(xdotool getmouselocation --shell)"
    for ((i=0;i<$(("${#bins[@]}"-1));i++)); do
        if ((bins[i]<=X && X<=bins[i+1])); then
            y_low=$(("${y_upp[i]}"-25))
            #echo $(("${y_upp[i]}"-2))
            [ "$Y" -lt "$y_low" ] && [ $status == "show" ] && polybar-msg cmd hide > /dev/null && \
                status="hide"
            [ "$Y" -gt $(("${y_upp[i]}"-2)) ] && [ $status == "hide" ] && polybar-msg cmd show > /dev/null &&
                status="show"
            [ "$(pgrep -x polybar | tail -1)" != "$pid" ] && polybar-msg cmd show > /dev/null && \
                status="show" && pid="$(pgrep -x polybar | tail -1)"
            break
        fi
    done

    sleep 0.9
done

