#!/bin/sh

# If refreshing bspwm, remove all previous rules to prevent doubling up.
bspc rule -r "*"

#LAUNCHERS
"$HOME/.config/bspwm/autostart.sh"

#fix for moving spotify to specific workspace
#bspc config external_rules_command ~/.config/bspwm/scripts/external_rules_command

#BSPWM configuration
#bspc config border_radius        	8 # needs patch
bspc config border_width         	2
bspc config window_gap           	5
bspc config top_padding          	35
bspc config bottom_padding       	5
bspc config left_padding         	5
bspc config right_padding        	5
bspc config single_monocle       	false
bspc config click_to_focus       	true
bspc config split_ratio          	0.50
bspc config borderless_monocle   	true
bspc config gapless_monocle      	true
bspc config focus_by_distance    	true
bspc config focus_follows_pointer 	false
bspc config history_aware_focus  	true
bspc config pointer_modifier 		mod4
bspc config pointer_action1 		move
bspc config pointer_action2 		resize_side
bspc config pointer_action3 		resize_corner
bspc config remove_disabled_monitors 	true
bspc config remove_unplugged_monitors 	true
bspc config merge_overlapping_monitors 	true

#BSPWM coloring
bspc config normal_border_color		"#4c566a"
bspc config active_border_color		"#1e1e1e"
bspc config focused_border_color	"#00ff84"
bspc config presel_feedback_color	"#00ff84"
bspc config urgent_border_color 	"#dd2727"


#AutoConfig monitor
layout() {
	bspc monitor "$1" -d 6 7 8 9 10
	bspc monitor "$2" -d 1 2 3 4 5	
}

if [ "$(xrandr | grep "\*" | wc | awk '{print $1}')" -eq "2" ]; then
	monitor_type1=$(xrandr | grep -w connected | awk '{print $1}' | head -n 1)
	monitor_type2=$(xrandr | grep -w connected | awk '{print $1}' | tail -n 1)

	#left position
	[ "$(grep -w monitor_position "$HOME/.monitor_position" | awk '{print $2}')" -eq "1" ] && layout "$monitor_type1" "$monitor_type2"
	# right position
	[ "$(grep -w monitor_position "$HOME/.monitor_position" | awk '{print $2}')" -eq "2" ] && layout "$monitor_type2" "$monitor_type1"
	#mirror mode
	[ "$(grep -w mirror_mode "$HOME/.monitor_position" | awk '{print $2}')" -eq "1" ] && bspc monitor -d 1 2 3 

elif [ "$(xrandr | grep -w connected | wc | awk '{print $1}')" -eq "1" ]; then
	bspc monitor -d 1 2 3 4 5
fi

#Fullscreen applications
bspc rule -a Vlc state=fullscreen
bspc rule -a VirtualBox Manager state=fullscreen
bspc rule -a VirtualBox Machine state=fullscreen

#Floating applications
bspc rule -a Arandr state=floating
bspc rule -a feh state=floating
bspc rule -a Oblogout monitor=primary state=floating center=true
bspc rule -a matplotlib state=floating center=true
bspc rule -a File-roller state=floating center=true
bspc rule -a Pavucontrol state=floating center=true

#open applications on specific workspaces
#bspc rule -a Google-chrome desktop='^1' follow=on
#bspc rule -a vlc desktop='^6'  follow=on
#bspc rule -a mpv desktop='^6'  follow=on
#bspc rule -a Thunar desktop='^8' follow=on

###External rules
##Pseudo automatic mode: always splits focused window when opening new window
#bspc config external_rules_command ~/.config/bspwm/scripts/pseudo_automatic_mode
##Adjust new window: splits biggest windows to keep windows about the same size
#bspc config external_rules_command ~/.config/bspwm/scripts/adjust-new-window


[ ! $(pgrep "pidswallow.sh") ] && \
		bspc subscribe node_add node_remove | \
		grep -o --line-buffered '0x[0-9A-F]\+$' | \
		xargs -n1 "$HOME/.config/bspwm/scripts/pidswallow.sh" &
